{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","searchFilter","onChange","handleSearchFilterChange","onKeyUp","handleSearchFilterKeyUp","PersonForm","newName","handleNameChange","newPhoneNumber","handlePhoneNumberChange","onClick","handleAdd","type","Persons","personsToShow","handleDelete","map","person","name","phoneNumber","id","Notification","message","messageType","className","baseUrl","personService","getAll","axios","get","create","newObject","post","update","put","remove","delete","App","useState","persons","setPersons","setNewName","setNewPhoneNumber","setSearchFilter","setPersonsToShow","notificationMessage","setNotificationMessage","notificationMessageType","setNotificationMessageType","useEffect","then","response","data","event","target","filter","toLowerCase","includes","preventDefault","newPerson","length","window","confirm","personIndex","findIndex","newPersons","setTimeout","concat","personToDelete","console","log","catch","reason","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942d26b2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with{' '}\n      <input\n        value={props.searchFilter}\n        onChange={props.handleSearchFilterChange}\n        onKeyUp={props.handleSearchFilterKeyUp}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form>\n        <div>\n          name:{' '}\n          <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n          number:{' '}\n          <input\n            value={props.newPhoneNumber}\n            onChange={props.handlePhoneNumberChange}\n          />\n        </div>\n        <div>\n          <button onClick={props.handleAdd} type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ personsToShow, handleDelete }) => {\n  return (\n    <div>\n      <ul>\n        {personsToShow.map((person) => (\n          <div key={person.id}>\n            <li>\n              {person.name} {person.phoneNumber}\n            </li>\n            <button name={person.name} onClick={handleDelete}>\n              Delete\n            </button>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={messageType}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst personService = { getAll, create, update, remove };\n\nexport default personService;\n","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [searchFilter, setSearchFilter] = useState('');\n  const [personsToShow, setPersonsToShow] = useState(persons);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationMessageType, setNotificationMessageType] = useState(null);\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      phoneNumber: newPhoneNumber,\n    };\n    const personSearch = persons.filter((person) => person.name === newName);\n    if (personSearch.length) {\n      if (\n        window.confirm(\n          `${newName} has already been added to the phonebook. Update number?`\n        )\n      ) {\n        // find where the person is in the persons array\n        const personIndex = persons.findIndex(\n          (person) => person.name === newName\n        );\n        // go and update on the backend\n        personService.update(persons[personIndex].id, newPerson);\n        // create a copy of persons so we don't update state directly\n        const newPersons = persons;\n        // update the local state phone number of person\n        newPersons[personIndex].phoneNumber = newPhoneNumber;\n        // refresh persons and personsToShow with new array\n        setPersons(newPersons);\n        setPersonsToShow(newPersons);\n      }\n      setNewName('');\n      setNewPhoneNumber('');\n      setNotificationMessage(`${newName} updated successfully`);\n      setNotificationMessageType('success');\n      window.setTimeout(() => {\n        setNotificationMessage(null);\n        setNotificationMessageType(null);\n      }, 5000);\n      return;\n    }\n    var newPersons = [];\n    personService.create(newPerson).then((response) => {\n      newPersons = persons.concat(response.data);\n      setPersons(newPersons);\n      setNewName('');\n      setNewPhoneNumber('');\n      const personsToShow = newPersons.filter((person) =>\n        person.name.toLowerCase().includes(searchFilter.toLowerCase())\n      );\n      setPersonsToShow(personsToShow);\n      setNotificationMessage(`${newName} created successfully`);\n      setNotificationMessageType('success');\n      window.setTimeout(() => {\n        setNotificationMessage(null);\n        setNotificationMessageType(null);\n      }, 5000);\n    });\n  };\n\n  const handleDelete = (event) => {\n    if (window.confirm(`Delete ${event.target.name}?`)) {\n      const personToDelete = persons.filter(\n        (person) => person.name === event.target.name\n      );\n      console.log(personToDelete);\n      personService\n        .remove(personToDelete[0].id)\n        .then((response) => {\n          const newPersons = persons.filter(\n            (person) => person.name !== event.target.name\n          );\n          setPersons(newPersons);\n          setPersonsToShow(newPersons);\n          setNotificationMessage(`${event.target.name} deleted successfully`);\n          setNotificationMessageType('success');\n          window.setTimeout(() => {\n            setNotificationMessage(null);\n            setNotificationMessageType(null);\n          }, 5000);\n        })\n        .catch((reason) => {\n          setNotificationMessage(reason);\n          setNotificationMessageType('error');\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value);\n  };\n\n  const handleSearchFilterChange = (event) => {\n    setSearchFilter(event.target.value);\n  };\n\n  const handleSearchFilterKeyUp = (event) => {\n    const personsToShow = persons.filter((person) =>\n      person.name.toLowerCase().includes(searchFilter.toLowerCase())\n    );\n    setPersonsToShow(personsToShow);\n  };\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n      setPersonsToShow(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notificationMessage}\n        messageType={notificationMessageType}\n      />\n      <Filter\n        searchFilter={searchFilter}\n        handleSearchFilterChange={handleSearchFilterChange}\n        handleSearchFilterKeyUp={handleSearchFilterKeyUp}\n      />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newPhoneNumber={newPhoneNumber}\n        handlePhoneNumberChange={handlePhoneNumberChange}\n        handleAdd={handleAdd}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}